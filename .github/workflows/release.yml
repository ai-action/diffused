name: release
on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: python

  publish:
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/diffused

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Install build
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  upload:
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Python
        uses: actions/setup-python@v5
        with:
          python-version: 3

      - name: Install dependencies
        run: pip install -e '.[build]'

      - name: Build executable
        shell: bash
        run: |
          os=${{ matrix.os }}
          os=${os%-*}
          tag=$(echo ${{ needs.release.outputs.tag_name }} | tr -d 'v')
          if [[ $os == 'ubuntu' ]]; then
            name=diffused-linux-$tag
          else
            name=diffused-$os-$tag
          fi
          pyinstaller src/diffused/cli.py --name $name --onefile --clean

      - name: Upload Release Artifact
        shell: bash
        run: gh release upload ${{ needs.release.outputs.tag_name }} $(ls -d dist/*)
        env:
          GH_TOKEN: ${{ github.token }}
